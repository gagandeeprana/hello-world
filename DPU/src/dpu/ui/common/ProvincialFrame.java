/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dpu.ui.common;

import dpu.entity.admin.State;
import dpu.ui.common.helper.StateHelper;
import java.awt.Component;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lakhvir
 */
public class ProvincialFrame extends javax.swing.JFrame {

    /**
     * Creates new form ProvincialFrame
     */
    public ProvincialFrame() {
        initComponents();
        
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        stateTable = new javax.swing.JTable();
        requery = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        stateTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Code", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        stateTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stateTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                stateTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(stateTable);
        if (stateTable.getColumnModel().getColumnCount() > 0) {
            stateTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            stateTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        requery.setText("Re-Query");
        requery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requeryActionPerformed(evt);
            }
        });

        submit.setText("Select");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(460, 460, 460)
                .addComponent(requery)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requery)
                    .addComponent(submit)
                    .addComponent(cancel))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void requeryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requeryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_requeryActionPerformed

    private void stateTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stateTableMousePressed
        // TODO add your handling code here:
        System.out.println("dpu.ui.common.ProvincialFrame.stateTableMousepressed()");
        StateHelper stateHelper = new StateHelper();
        System.out.println("stateTableMousePressed");
        List<State> states = stateHelper.getAllStateData();
        String stateCode = states.get(stateTable.getSelectedRow()).getStateCode();
        AddDriverFrame.txtPvs.setText(stateCode);
       //ProvincialFrame().se
        //use this..
    }//GEN-LAST:event_stateTableMousePressed

    private void stateTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stateTableMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,"Clicked");
        System.out.println("dpu.ui.common.ProvincialFrame.stateTableMouseClicked()");
        StateHelper stateHelper = new StateHelper();
        System.out.println("stateTableMouseclicked");
        List<State> states = stateHelper.getAllStateData();
        String stateCode = states.get(stateTable.getSelectedRow()).getStateCode();
        AddDriverFrame.txtPvs.setText(stateCode);
    }//GEN-LAST:event_stateTableMouseClicked

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        //System.out.println("hi lucky");
        //ProvincialFrame provincialFrame = new ProvincialFrame();
        //StateHelper stateHelper = new StateHelper();
        System.out.println("stateTableMouseclicked");
       // List<State> states = stateHelper.getAllStateData();
        int index = stateTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) stateTable.getModel();
        //String stateCode = states.get(stateTable.getSelectedRow()).getStateCode();
        Object stateCode = model.getValueAt(index, 0);
        AddDriverFrame.txtPvs.setText((String)stateCode);
        dispose();
        
        
    }//GEN-LAST:event_submitActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        dispose();//it closes the frame
    }//GEN-LAST:event_cancelActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProvincialFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProvincialFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProvincialFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProvincialFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProvincialFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    public static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton requery;
    public static javax.swing.JTable stateTable;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
