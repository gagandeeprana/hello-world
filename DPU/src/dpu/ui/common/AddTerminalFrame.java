/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dpu.ui.common;

import dpu.ui.common.helper.TerminalUIHelper;
import dpu.Validations;
import dpu.beans.admin.TerminalBean;
import dpu.dao.admin.TerminalDAO;
import dpu.dao.admin.impl.TerminalDAOImpl;
import java.util.List;
import javax.swing.JOptionPane;

public class AddTerminalFrame extends javax.swing.JFrame {

    /**
     * Creates new form AddTerminal
     */
    String msg = "";
    TerminalUIHelper terminalUI = null;
    String addUpdateFlag = "";
    TerminalBean terminalBean;

    public AddTerminalFrame() {
        initComponents();
        setLocationRelativeTo(null);
        terminalUI = new TerminalUIHelper();
        btnSaveAddTerminal.setEnabled(false);
        fillLabel();
    }

    public AddTerminalFrame(TerminalBean terminalBean) {
        initComponents();
        terminalUI = new TerminalUIHelper();
        this.terminalBean = terminalBean;
        setLocationRelativeTo(null);
        addUpdateFlag = "update";
        showRecord(terminalBean);
        btnSaveAddTerminal.setText("Update");
        btnSaveAddTerminal.setEnabled(true);
    }
    
    private void fillLabel() {
        lblTerminalIdAddTerminalFrameValidation.setText(" ");
        lblTerminalNameAddTerminalFrameValidation.setText(" ");
    }

    public boolean validateTerminalId(String str) {
        if (Validations.isEmpty(str)) {
            msg = "Left Empty..!";
            return false;
        }
        if (Validations.hasNumerals(str)) {
            msg = "Only Numerics Allowed..!";
            return false;
        }
        if (Validations.hasSpace(str)) {
            msg = "Space Not Allowed..!";
            return false;
        }
        return true;
    }

    public boolean validateTerminalName(String str) {
        if (Validations.isEmpty(str)) {
            msg = "Left Empty..!";
            return false;
        }
        if (Validations.hasAlphabets(str)) {
            msg = "Only Alphabets Allowed..!";
            return false;
        }
        if (Validations.hasSpace(str)) {
            msg = "Space Not Allowed..!";
            return false;
        }
        return true;
    }

    public void showRecord(TerminalBean terminalBean) {
        txtTerminalIdAddTerminal.setText(String.valueOf(terminalBean.getTerminalId()));
        txtTerminalNameAddTerminal.setText(terminalBean.getTerminalName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtTerminalIdAddTerminal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTerminalNameAddTerminal = new javax.swing.JTextField();
        btnSaveAddTerminal = new javax.swing.JButton();
        btnCancelAddTerminal = new javax.swing.JButton();
        lblTerminalIdAddTerminalFrameValidation = new javax.swing.JLabel();
        lblTerminalNameAddTerminalFrameValidation = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Terminal Id");

        txtTerminalIdAddTerminal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTerminalIdAddTerminalActionPerformed(evt);
            }
        });
        txtTerminalIdAddTerminal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTerminalIdAddTerminalKeyReleased(evt);
            }
        });

        jLabel8.setText("Terminal Name");

        txtTerminalNameAddTerminal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTerminalNameAddTerminalActionPerformed(evt);
            }
        });
        txtTerminalNameAddTerminal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTerminalNameAddTerminalKeyReleased(evt);
            }
        });

        btnSaveAddTerminal.setText("Save");
        btnSaveAddTerminal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAddTerminalActionPerformed(evt);
            }
        });

        btnCancelAddTerminal.setText("Cancel");
        btnCancelAddTerminal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelAddTerminalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSaveAddTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelAddTerminal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTerminalNameAddTerminal)
                            .addComponent(txtTerminalIdAddTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTerminalIdAddTerminalFrameValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTerminalNameAddTerminalFrameValidation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancelAddTerminal, btnSaveAddTerminal});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTerminalIdAddTerminalFrameValidation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtTerminalIdAddTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtTerminalNameAddTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTerminalNameAddTerminalFrameValidation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveAddTerminal)
                    .addComponent(btnCancelAddTerminal))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTerminalIdAddTerminalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTerminalIdAddTerminalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTerminalIdAddTerminalActionPerformed

    private void btnCancelAddTerminalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelAddTerminalActionPerformed
        dispose();
        terminalUI.disable(true);
    }//GEN-LAST:event_btnCancelAddTerminalActionPerformed

    private void btnSaveAddTerminalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAddTerminalActionPerformed
        String msg = "";
        if (addUpdateFlag.equals("update")) {
            terminalBean = new TerminalBean();
            terminalBean.setTerminalId(Integer.parseInt(txtTerminalIdAddTerminal.getText()));
            terminalBean.setTerminalName(txtTerminalNameAddTerminal.getText());
            msg = terminalUI.update(terminalBean);
        } else {
            msg = terminalUI.save();
        }
        JOptionPane.showMessageDialog(null, msg);
        dispose();
    }//GEN-LAST:event_btnSaveAddTerminalActionPerformed

    private void txtTerminalIdAddTerminalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTerminalIdAddTerminalKeyReleased
        TerminalDAO terminalDAO = new TerminalDAOImpl();
        List<TerminalBean> lstTerminals = terminalDAO.getAllTerminals("");
        try {
            if (validateTerminalId(txtTerminalIdAddTerminal.getText())) {
                lblTerminalIdAddTerminalFrameValidation.setText("");
                for (TerminalBean terminalBean : lstTerminals) {
                    if (terminalBean.getTerminalId() == Integer.parseInt(txtTerminalIdAddTerminal.getText().trim())) {
                        lblTerminalIdAddTerminalFrameValidation.setText("Already Taken");
                        btnSaveAddTerminal.setEnabled(false);
                    }
                }
            } else {
                lblTerminalIdAddTerminalFrameValidation.setText(msg);
                btnSaveAddTerminal.setEnabled(false);
            }
            if (lblTerminalIdAddTerminalFrameValidation.getText().equals("") && lblTerminalNameAddTerminalFrameValidation.getText().equals("")) {
                btnSaveAddTerminal.setEnabled(true);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_txtTerminalIdAddTerminalKeyReleased

    private void txtTerminalNameAddTerminalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTerminalNameAddTerminalKeyReleased
        TerminalDAO terminalDAO = new TerminalDAOImpl();
        List<TerminalBean> lstTerminals = terminalDAO.getAllTerminals("");
        try {
            if (validateTerminalName(txtTerminalNameAddTerminal.getText())) {
                lblTerminalNameAddTerminalFrameValidation.setText("");
                for (TerminalBean terminalBean : lstTerminals) {
                    if (terminalBean.getTerminalName().equals(txtTerminalNameAddTerminal.getText().trim())) {
                        lblTerminalNameAddTerminalFrameValidation.setText("Already Taken");
                        btnSaveAddTerminal.setEnabled(false);
                    }
                }
            } else {
                lblTerminalNameAddTerminalFrameValidation.setText(msg);
                btnSaveAddTerminal.setEnabled(false);
            }
            if (lblTerminalIdAddTerminalFrameValidation.getText().equals("") && lblTerminalNameAddTerminalFrameValidation.getText().equals("")) {
                btnSaveAddTerminal.setEnabled(true);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_txtTerminalNameAddTerminalKeyReleased

    private void txtTerminalNameAddTerminalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTerminalNameAddTerminalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTerminalNameAddTerminalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddTerminalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddTerminalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddTerminalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddTerminalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddTerminalFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnCancelAddTerminal;
    public static javax.swing.JButton btnSaveAddTerminal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblTerminalIdAddTerminalFrameValidation;
    private javax.swing.JLabel lblTerminalNameAddTerminalFrameValidation;
    public static javax.swing.JTextField txtTerminalIdAddTerminal;
    public static javax.swing.JTextField txtTerminalNameAddTerminal;
    // End of variables declaration//GEN-END:variables
}
