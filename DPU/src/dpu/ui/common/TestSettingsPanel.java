/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dpu.ui.common;

import static dpu.ui.common.MainFrame.lstPreferences;
import static dpu.ui.common.MainFrame.lstTabs;
import static dpu.ui.common.MainFrame.mainTabbedPane;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author gagandeep.rana
 */
public class TestSettingsPanel extends javax.swing.JPanel implements ActionListener, ItemListener {

    /**
     * Creates new form TestSettingsPanel
     */
    JCheckBox[] chkArray = null;
    JCheckBox chk = null;
    JButton btn = null;
    JCheckBox headCheckBox = null;

    public TestSettingsPanel() {
        initComponents();
        setSettingsPanelBody();
    }

    private void setSettingsPanelBody() {
        int height = 0;
        chkArray = new JCheckBox[lstTabs.size()];
        JLabel lblSelectAll = new JLabel("Select All");
        lblSelectAll.setBounds(360, 10, 120, 40);
        add(lblSelectAll);
        headCheckBox = new JCheckBox();
        headCheckBox.setBounds(420, 10, 120, 40);
        add(headCheckBox);
        headCheckBox.addItemListener(this);
        for (int i = 0; i < lstTabs.size(); i++) {
            JLabel lbl = new JLabel(lstTabs.get(i));
            chk = new JCheckBox();
            chk.setName("chk" + i);
            lbl.setBounds(200, ((i + 1) * 30) + 10, 120, 40);
            chk.setBounds(420, ((i + 1) * 30) + 10, 120, 40);
            add(lbl);
            add(chk);
            chkArray[i] = chk;
            for (String tab : lstPreferences) {
                if (lbl.getText().equals(tab)) {
                    chk.setSelected(true);
                }
            }
        }
        height = (lstTabs.size()) * 30 + 60;
        btn = new JButton("Save");
        btn.setBounds(320, height, 120, 40);
        add(btn);
        btn.addActionListener(this);
        setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        Object source = e.getSource();
        if (source == btn) {
            List<String> lstTabsToBeWritten = new ArrayList<>();
            for (int i = 0; i < lstTabs.size(); i++) {
                if (chkArray[i].isSelected()) {
                    lstTabsToBeWritten.add(lstTabs.get(i));
                }
            }
            writeIntoTabFile(lstTabsToBeWritten);
            JOptionPane.showMessageDialog(null, "Changes Done");
            mainTabbedPane.removeAll();
            MainFrame.lstPreferences = new ArrayList<>();
            MainFrame.map = new TreeMap<>();
            MainFrame.checkPreference();
            MainFrame.showHideTabs();
            MainFrame.setSettingsIcon();
            setSettingsPanelBody();
        }
    }

    private void writeIntoTabFile(List<String> lstTabs) {
        FileWriter fileWriter = null;
        try {
            fileWriter = new FileWriter("src\\dpu\\ui\\common\\preferencetabs.txt", false);
            for (int i = 0; i < lstTabs.size(); i++) {
                String tab = lstTabs.get(i);
                if (i != lstTabs.size() - 1) {
                    fileWriter.write(tab + "\r");
                } else {
                    fileWriter.write(tab);
                }
            }
            fileWriter.close();
        } catch (Exception e) {
            System.out.println("MainFrame : writeIntoTabFile() : " + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 465, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 423, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getStateChange() == 1) {
            for (int i = 0; i < chkArray.length; i++) {
                chkArray[i].setSelected(true);
            }
        } else {
            for (int i = 0; i < chkArray.length; i++) {
                chkArray[i].setSelected(false);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
