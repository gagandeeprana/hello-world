/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dpu.ui.common;

import dpu.ui.common.helper.ClassUIHelper;
import dpu.Validations;
import dpu.beans.admin.ClassBean;
import dpu.dao.admin.ClassDAO;
import dpu.dao.admin.impl.ClassDAOImpl;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class AddClassFrame extends javax.swing.JFrame {

    /**
     * Creates new form AddClass
     */
    String msg = "";
    ClassUIHelper classUI = null;
    String addUpdateFlag = "";
    ClassBean classBean;

    public void init(ClassBean divisionBean) {
    }

    public AddClassFrame() {
        initComponents();
        setIconImage(new ImageIcon("src\\dpu\\ui\\common\\Application-Icon.png").getImage());
        setLocationRelativeTo(null);
        classUI = new ClassUIHelper();
        btnSaveAddClass.setEnabled(false);
    }

    public AddClassFrame(ClassBean classBean) {
        initComponents();
        classUI = new ClassUIHelper();
        this.classBean = classBean;
        setLocationRelativeTo(null);
        addUpdateFlag = "update";
        showRecord(classBean);
        btnSaveAddClass.setText("Update");
        btnSaveAddClass.setEnabled(true);
    }

    public boolean validateClassId(String str) {
        if (Validations.isEmpty(str)) {
            msg = "Left Empty..!";
            return false;
        }
        if (Validations.hasNumerals(str)) {
            msg = "Only Numerics Allowed..!";
            return false;
        }
        if (Validations.hasSpace(str)) {
            msg = "Space Not Allowed..!";
            return false;
        }
        return true;
    }

    public boolean validateClassName(String str) {
        if (Validations.isEmpty(str)) {
            msg = "Left Empty..!";
            return false;
        }
        if (Validations.hasAlphabets(str)) {
            msg = "Only Alphabets Allowed..!";
            return false;
        }
        if (Validations.hasSpace(str)) {
            msg = "Space Not Allowed..!";
            return false;
        }
        return true;
    }

    public void showRecord(ClassBean classBean) {
        txtClassIdAddClass.setText(String.valueOf(classBean.getClassId()));
        txtClassNameAddClass.setText(classBean.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtClassIdAddClass = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtClassNameAddClass = new javax.swing.JTextField();
        btnSaveAddClass = new javax.swing.JButton();
        btnCancelAddClass = new javax.swing.JButton();
        lblClassIdAddClassFrameValidation = new javax.swing.JLabel();
        lblClassNameAddClassFrameValidation = new javax.swing.JLabel();
        btnSaveAndExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Class Id");

        txtClassIdAddClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClassIdAddClassActionPerformed(evt);
            }
        });
        txtClassIdAddClass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtClassIdAddClassKeyReleased(evt);
            }
        });

        jLabel8.setText("Class Name");

        txtClassNameAddClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClassNameAddClassActionPerformed(evt);
            }
        });
        txtClassNameAddClass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtClassNameAddClassKeyReleased(evt);
            }
        });

        btnSaveAddClass.setText("Save");
        btnSaveAddClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAddClassActionPerformed(evt);
            }
        });

        btnCancelAddClass.setText("Cancel");
        btnCancelAddClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelAddClassActionPerformed(evt);
            }
        });

        btnSaveAndExit.setText("Save&Exit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSaveAddClass, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelAddClass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSaveAndExit))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtClassNameAddClass)
                            .addComponent(txtClassIdAddClass, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblClassIdAddClassFrameValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblClassNameAddClassFrameValidation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancelAddClass, btnSaveAddClass});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblClassIdAddClassFrameValidation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtClassIdAddClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtClassNameAddClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblClassNameAddClassFrameValidation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveAddClass)
                    .addComponent(btnCancelAddClass)
                    .addComponent(btnSaveAndExit))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtClassIdAddClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClassIdAddClassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClassIdAddClassActionPerformed

    private void btnCancelAddClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelAddClassActionPerformed
        dispose();
        classUI.disable(true);
    }//GEN-LAST:event_btnCancelAddClassActionPerformed

    private void btnSaveAddClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAddClassActionPerformed
        String msg = "";
        if (addUpdateFlag.equals("update")) {
            classBean = new ClassBean();
            classBean.setClassId(Integer.parseInt(txtClassIdAddClass.getText()));
            classBean.setName(txtClassNameAddClass.getText());
            msg = classUI.update(classBean);
        } else {
            msg = classUI.save();
        }
        JOptionPane.showMessageDialog(null, msg);
        dispose();
    }//GEN-LAST:event_btnSaveAddClassActionPerformed

    private void txtClassIdAddClassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClassIdAddClassKeyReleased
        ClassDAO divisionDAO = new ClassDAOImpl();
        List<ClassBean> lstClasses = divisionDAO.getAllClasses("");
        try {
            if (validateClassId(txtClassIdAddClass.getText())) {
                lblClassIdAddClassFrameValidation.setText("");
                for (ClassBean divisionBean : lstClasses) {
                    if (divisionBean.getClassId() == Integer.parseInt(txtClassIdAddClass.getText().trim())) {
                        lblClassIdAddClassFrameValidation.setText("Already Taken");
                        btnSaveAddClass.setEnabled(false);
                    }
                }
            } else {
                lblClassIdAddClassFrameValidation.setText(msg);
                btnSaveAddClass.setEnabled(false);
            }
            if (lblClassIdAddClassFrameValidation.getText().equals("") && lblClassNameAddClassFrameValidation.getText().equals("")) {
                btnSaveAddClass.setEnabled(true);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_txtClassIdAddClassKeyReleased

    private void txtClassNameAddClassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClassNameAddClassKeyReleased
        ClassDAO divisionDAO = new ClassDAOImpl();
        List<ClassBean> lstClasss = divisionDAO.getAllClasses("");
        try {
            if (validateClassName(txtClassNameAddClass.getText())) {
                lblClassNameAddClassFrameValidation.setText("");
                for (ClassBean divisionBean : lstClasss) {
                    if (divisionBean.getClass().equals(txtClassNameAddClass.getText().trim())) {
                        lblClassNameAddClassFrameValidation.setText("Already Taken");
                        btnSaveAddClass.setEnabled(false);
                    }
                }
            } else {
                lblClassNameAddClassFrameValidation.setText(msg);
                btnSaveAddClass.setEnabled(false);
            }
            if (lblClassIdAddClassFrameValidation.getText().equals("") && lblClassNameAddClassFrameValidation.getText().equals("")) {
                btnSaveAddClass.setEnabled(true);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_txtClassNameAddClassKeyReleased

    private void txtClassNameAddClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClassNameAddClassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClassNameAddClassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddClassFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddClassFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddClassFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddClassFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddClassFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelAddClass;
    private javax.swing.JButton btnSaveAddClass;
    private javax.swing.JButton btnSaveAndExit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblClassIdAddClassFrameValidation;
    private javax.swing.JLabel lblClassNameAddClassFrameValidation;
    public static javax.swing.JTextField txtClassIdAddClass;
    public static javax.swing.JTextField txtClassNameAddClass;
    // End of variables declaration//GEN-END:variables
}
